import Head from 'next/head'
import { Inter } from 'next/font/google'
import { useState, useEffect } from 'react';

import fs from 'fs';
import path from 'path';

const inter = Inter({ subsets: ['latin'] });

export default function Home({ data }: { data: { name: string }[] }) {
  const [imageUrl, setImageUrl] = useState<string>('');
  const [speakerIndex, setSpeakerIndex] = useState<number>(-1);

  useEffect(() => {

    // Image
    (async () => {
      const response = await fetch('/api/image');
      const data = await response.json();
      const imageUrl = data.images[0].url;
      setImageUrl(`http://www.bing.com${imageUrl}`);
    })();

    // State
    setInterval(async () => {
      const response = await fetch('/api/state');
      const data = await response.json();
      setSpeakerIndex(data.speakerIndex);
    }, 500);
  }, []);

  const handleNext = async () => {
    await fetch('/api/state', {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ speakerIndex: speakerIndex + 1 }),
    });
  };

  const handlePrevious = async () => {
    await fetch('/api/state', {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ speakerIndex: speakerIndex - 1 }),
    });
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <main className={`${inter.className}`}>
        {data.map((item, index) => (
          <div key={index}>{item.name}, selected: {index === speakerIndex ? 'true' : 'false'}</div>
        ))}
        <button onClick={handlePrevious}>Previous</button>
        <button onClick={handleNext}>Next</button>

        

        {imageUrl && <img src={imageUrl} alt="Bing daily image" />}
      </main>
    </>
  )
}

export async function getServerSideProps() {
  const filePath = path.join(process.cwd(), 'config.json');
  const jsonData = fs.readFileSync(filePath, 'utf8');
  const data: { name: string }[] = JSON.parse(jsonData);

  return {
    props: {
      data
    }
  };
}